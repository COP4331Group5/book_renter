version: "3"

services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: app
    image: book_renter
    tty: true
    ports:
      - "3000:3000"
  dev:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      target: dev
    image: book_renter_dev
    depends_on:
      - db
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - .:/srv
      - /srv/.pnpm-store
      - /srv/node_modules
      - /srv/.next
      - /srv/.turbo
  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    restart: always
    user: postgres
    # command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: book_renter
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - "database:/var/lib/postgresql/data"
  db_gui:
    build: docker/db_gui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.org
      PGADMIN_DEFAULT_PASSWORD: example
      PGADMIN_LISTEN_PORT: 4000
      PGADMIN_SERVER_JSON_FILE: "/etc/pgadmin/servers.json"
    ports:
      - "4000:4000"
  pp_dev:
    build:
      context: ./docker/pp/
      dockerfile: Dockerfile
      target: dev
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ./docker/pp:/srv
      - /srv/.pnpm-store
      - /srv/node_modules
      - /srv/.next
      - /srv/.turbo
volumes:
  database:
  fileserver:
